#!/usr/bin/env php

<?php

require_once __DIR__.'/../vendor/autoload.php';

use App\Application\Providers\DoctrineDefinitionsProvider;
use Brash\Framework\Http\Factories\ContainerFactory;
use Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager;
use Doctrine\Migrations\Configuration\Migration\PhpFile;
use Doctrine\Migrations\DependencyFactory;
use Doctrine\Migrations\Tools\Console\Command;
use Doctrine\ORM\EntityManagerInterface as EntityManager;
use Symfony\Component\Console\Application;

$containerFactory = new ContainerFactory();
$containerFactory->addProviders(DoctrineDefinitionsProvider::class);
$container = $containerFactory->get();
$src = dirname(__DIR__);

$config = new PhpFile("{$src}/doctrine-migrations.php");

$em = $container->get(EntityManager::class);

$dependencyFactory = DependencyFactory::fromEntityManager($config, new ExistingEntityManager($em));


$cli = new Application('Doctrine Migrations');
$cli->setCatchExceptions(true);

$cli->addCommands(array(
    new Command\CurrentCommand($dependencyFactory),
    new Command\DiffCommand($dependencyFactory),
    new Command\DumpSchemaCommand($dependencyFactory),
    new Command\ExecuteCommand($dependencyFactory),
    new Command\GenerateCommand($dependencyFactory),
    new Command\LatestCommand($dependencyFactory),
    new Command\ListCommand($dependencyFactory),
    new Command\MigrateCommand($dependencyFactory),
    new Command\RollupCommand($dependencyFactory),
    new Command\StatusCommand($dependencyFactory),
    new Command\SyncMetadataCommand($dependencyFactory),
    new Command\UpToDateCommand($dependencyFactory),
    new Command\VersionCommand($dependencyFactory),
));

$cli->run();
